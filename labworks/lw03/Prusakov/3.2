#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>

int main()
{
    pid_t pid, ppid, fid;//тип данных pid_t
    printf ("Лабораторная работа № 3.2\
            \nПрусаков А.О. ПСбд-21");
    int a = 0;
    // Узнаем идентификаторы текущего и родительского процесса (в каждом из процессов !!!)
    fid=fork();//новый процесс может быть порожден единственным способом – с помощью системного вызова fork()
    ppid = getppid();//родительского
    pid = getpid();//дочернего
    //pid=fork();//новый процесс может быть порожден единственным способом – с помощью системного вызова fork()
    // Перед выполнением следующего выражения значение переменной a в обоих процессах равно 0
    if (fid == 0)
        printf("\nдочерний элемент\n");
    else printf("\nродительский элемент\n");
    for (int i = 0; i<5; i++){
        a++;
    // Печатаем значения PID, PPID и вычисленное значение переменной a (в каждом из процессов !!!)
    printf("My pid = %d, my ppid = %d, result = %d\n", (int)pid, (int)ppid, a);
    }
    return 0;
}
